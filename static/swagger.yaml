openapi: 3.0.0
info:
  title: API de Gestión de Usuarios
  description: API para gestionar usuarios, incluyendo operaciones CRUD, registro, login y recuperación de clave.
  version: 1.0.0
servers:
  - url: http://localhost:5000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserUpdate:
      type: object
      properties:
        nombre:
          type: string
        email:
          type: string

    UserDelete:
      type: object
      properties:
        email:
          type: string

    ValidationErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: array
          items:
            type: string

    UnauthorizedErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Credenciales inválidas o token no provisto

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Error interno del servidor

    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Correo electrónico del usuario para el restablecimiento de contraseña
      required:
        - email

    PasswordResetConfirm:
      type: object
      properties:
        clave:
          type: string
          description: Nueva contraseña del usuario
      required:
        - clave

paths:
  /usuarios/:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: Nombre del usuario
                email:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                clave:
                  type: string
                  description: Contraseña del usuario
              required:
                - nombre
                - email
                - clave
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: Usuario creado exitosamente.
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Acceso prohibido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '405':
          description: Método no permitido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Listar todos los usuarios con paginación
      description: Obtiene una lista de todos los usuarios con soporte para paginación.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número de página
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de usuarios por página
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        email:
                          type: string
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Acceso prohibido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios/{id}:
    get:
      summary: Obtener información de un usuario
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        '200':
          description: Información del usuario obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID del usuario
                  nombre:
                    type: string
                    description: Nombre del usuario
                  email:
                    type: string
                    description: Correo electrónico del usuario
                  created_at:
                    type: string
                    format: date-time
                    description: Fecha y hora de creación del usuario
                  updated_at:
                    type: string
                    format: date-time
                    description: Fecha y hora de la última actualización del usuario
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Acceso prohibido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '405':
          description: Método no permitido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    

    

  /usuarios/actualizar:
    put:
      summary: Actualizar un usuario por correo electrónico
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: No autorizado para actualizar este usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /usuarios/eliminar:
    delete:
      summary: Eliminar un usuario por correo electrónico
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDelete'
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '403':
          description: No autorizado para eliminar este usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /auth/login:
    post:
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                clave:
                  type: string
              required:
                - email
                - clave
      responses:
        '200':
          description: Login exitoso, devuelve token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset_password:
    post:
      summary: Solicitar restablecimiento de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200':
          description: Se envió el enlace de restablecimiento de contraseña
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: Se ha enviado un enlace para restablecer la contraseña al correo electrónico proporcionado.
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset_password/{token}:
    post:
      summary: Restablecer contraseña
      parameters:
        - name: token
          in: path
          required: true
          description: Token de restablecimiento de contraseña
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '200':
          description: Contraseña restablecida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: Contraseña restablecida exitosamente.
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'